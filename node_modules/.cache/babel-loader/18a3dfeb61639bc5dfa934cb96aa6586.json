{"ast":null,"code":"var _jsxFileName = \"/Users/zeidaradumihai/Desktop/holidaze/build/holidaze-travel-agency/src/components/login/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport axios from \"axios\";\nimport { BASE_URL, TOKEN_PATH } from \"../../constants/Api\";\nimport AuthContext from \"../../context/AuthContext\";\nimport Container from 'react-bootstrap/Container';\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport ErrorMessage from \"../../common/error/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst url = BASE_URL + TOKEN_PATH;\nconst schema = yup.object().shape({\n  identifier: yup.string().required(\"Please enter your username\"),\n  password: yup.string().required(\"Please enter your password\")\n});\nexport default function LoginForm() {\n  _s();\n\n  const [submitting, setSubmitting] = useState(false);\n  const [loginError, setLoginError] = useState(null);\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const [, setAuth] = useContext(AuthContext);\n\n  async function onSubmit(data) {\n    setSubmitting(true);\n    setLoginError(null); // console.log(data);\n\n    try {\n      const response = await axios.post(url, data);\n      console.log(\"response\", response.data);\n      setAuth(response.data);\n      history.push(\"/admin/message\");\n    } catch (error) {\n      console.log(\"error\", error);\n      setLoginError(error.toString());\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"container_form\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [loginError && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          className: \"error-alert\",\n          children: [\"There is a problem to login. please refresh the page and try again. \", /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"error-b\",\n            children: \"Error description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 121\n          }, this), \" \", loginError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          disabled: submitting,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"identifier\",\n              placeholder: \"Username\",\n              ref: register,\n              className: \"form_control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 5\n            }, this), errors.identifier && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              children: errors.identifier.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"password\",\n              placeholder: \"Password\",\n              ref: register,\n              type: \"password\",\n              className: \"form_control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 6\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              children: errors.password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \" button btn-form\",\n            children: submitting ? \"Loggin in...\" : \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n\n_s(LoginForm, \"xP/MROf0Dp1T/bFw7uW2u7SCK2E=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/zeidaradumihai/Desktop/holidaze/build/holidaze-travel-agency/src/components/login/LoginForm.js"],"names":["useState","useContext","useHistory","useForm","yup","yupResolver","axios","BASE_URL","TOKEN_PATH","AuthContext","Container","Form","Alert","ErrorMessage","url","schema","object","shape","identifier","string","required","password","LoginForm","submitting","setSubmitting","loginError","setLoginError","history","register","handleSubmit","errors","resolver","setAuth","onSubmit","data","response","post","console","log","push","error","toString","message"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport axios from \"axios\";\nimport { BASE_URL, TOKEN_PATH } from \"../../constants/Api\";\nimport AuthContext from \"../../context/AuthContext\";\nimport Container from 'react-bootstrap/Container';\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport ErrorMessage from \"../../common/error/ErrorMessage\";\n\n\nconst url = BASE_URL + TOKEN_PATH;\n\nconst schema = yup.object().shape({\n\tidentifier: yup.string().required(\"Please enter your username\"),\n\tpassword: yup.string().required(\"Please enter your password\"),\n});\n\nexport default function LoginForm() {\n\tconst [submitting, setSubmitting] = useState(false);\n\tconst [loginError, setLoginError] = useState(null);\n\n\tconst history = useHistory();\n\n\tconst { register, handleSubmit, errors } = useForm({\n\t\tresolver: yupResolver(schema),\n\t});\n\n\tconst [, setAuth] = useContext(AuthContext);\n\n\tasync function onSubmit(data) {\n\t\tsetSubmitting(true);\n\t\tsetLoginError(null);\n\n\t\t// console.log(data);\n\n\t\ttry {\n\t\t\tconst response = await axios.post(url, data);\n\t\t\tconsole.log(\"response\", response.data);\n\t\t\tsetAuth(response.data);\n\t\t\thistory.push(\"/admin/message\");\n\n\t\t} catch (error) {\n\t\t\tconsole.log(\"error\", error);\n\t\t\tsetLoginError(error.toString());\n\n\t\t} finally {\n\t\t\tsetSubmitting(false);\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t<Container className=\"container_form\">\n\t\t\t<Form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t{loginError && (\n\t\t\t\t<Alert variant=\"danger\" className=\"error-alert\">There is a problem to login. please refresh the page and try again. <b className=\"error-b\">Error description:</b> {loginError}</Alert>\n\t\t\t)}\n\t\t\t<fieldset disabled={submitting}>\n\t\t\t\t{/* <Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"identifier\">Username</Form.Label>\n\t\t\t\t\t<Form.Control className=\"form_control\" ref={register} id=\"identifier\" />\n\t\t\t\t\t{errors.identifier && <ErrorMessage>{errors.identifier.message}</ErrorMessage>}\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"password\">Password</Form.Label>\n\t\t\t\t\t<Form.Control type=\"password\"  ref={register} id=\"password\" className=\"form_control\"/>\n\t\t\t\t\t{errors.password && <ErrorMessage>{errors.password.message}</ErrorMessage>}\n\t\t\t\t</Form.Group> */}\n\t\t\t\t<Form.Group>\n\t\t\t\t<Form.Control  name=\"identifier\" placeholder=\"Username\" ref={register} className=\"form_control\"/>\n\t\t\t\t\t{errors.identifier && <ErrorMessage>{errors.identifier.message}</ErrorMessage>}\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Control name=\"password\" placeholder=\"Password\" ref={register} type=\"password\" className=\"form_control\"/>\n\t\t\t\t\t{errors.password && <ErrorMessage>{errors.password.message}</ErrorMessage>}\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<button className=\" button btn-form\">{submitting ? \"Loggin in...\" : \"Login\"}</button>\n\t\t\t</fieldset>\n\t\t\t</Form>\n\t\t</Container>\n\t\t</>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}